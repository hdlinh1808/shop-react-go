[{"/media/lap12654/DATA/git/my-git/blog-react-go-mongodb/client/src/App.js":"1","/media/lap12654/DATA/git/my-git/blog-react-go-mongodb/client/src/reportWebVitals.js":"2","/media/lap12654/DATA/git/my-git/blog-react-go-mongodb/client/src/index.js":"3","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/reportWebVitals.js":"4","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/App.js":"5","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/index.js":"6","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/Navbar.js":"7","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/Test.js":"8","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/AppHeader.js":"9","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/AppBody.js":"10","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/AppFooter.js":"11","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/product/ProductListView.js":"12","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/product/ProductSidebar.js":"13","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/product/ProductPage.js":"14","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/product/ProductItem.js":"15","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/About.js":"16","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/Login.js":"17","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/product/ProductDetail.js":"18","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/DirectionImage.js":"19","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/Register.js":"20","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/authen/Authenticate.js":"21","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/pathname/Pathname.js":"22","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/account/Account.js":"23","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/account/AccountListAddress.js":"24","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/account/ModalAddress.js":"25","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/admin/AdminPage.js":"26","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/UserPage.js":"27","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/admin/AdminSidebar.js":"28","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/admin/AdminBody.js":"29","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/admin/Dashboard.js":"30","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/admin/product/ProductList.js":"31","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/admin/category/Category.js":"32","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/model/CategoryModel.js":"33","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/admin/category/ModalCategory.js":"34","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/table/LTable.js":"35"},{"size":233,"mtime":1610017072913,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":1610006050632,"results":"38","hashOfConfig":"37"},{"size":542,"mtime":1610017200995,"results":"39","hashOfConfig":"37"},{"size":362,"mtime":1610006050632,"results":"40","hashOfConfig":"41"},{"size":942,"mtime":1617158746619,"results":"42","hashOfConfig":"41"},{"size":542,"mtime":1610017200995,"results":"43","hashOfConfig":"41"},{"size":3653,"mtime":1617100472064,"results":"44","hashOfConfig":"41"},{"size":262,"mtime":1614681272331,"results":"45","hashOfConfig":"41"},{"size":470,"mtime":1614934936575,"results":"46","hashOfConfig":"41"},{"size":1160,"mtime":1617593003526,"results":"47","hashOfConfig":"41"},{"size":3878,"mtime":1615350630607,"results":"48","hashOfConfig":"41"},{"size":2943,"mtime":1616574534661,"results":"49","hashOfConfig":"41"},{"size":918,"mtime":1617091087342,"results":"50","hashOfConfig":"41"},{"size":1818,"mtime":1615191166343,"results":"51","hashOfConfig":"41"},{"size":2187,"mtime":1616572457726,"results":"52","hashOfConfig":"41"},{"size":205,"mtime":1614929738925,"results":"53","hashOfConfig":"41"},{"size":3286,"mtime":1616641729579,"results":"54","hashOfConfig":"41"},{"size":6141,"mtime":1615349097049,"results":"55","hashOfConfig":"41"},{"size":2110,"mtime":1616574137545,"results":"56","hashOfConfig":"41"},{"size":9085,"mtime":1616642450260,"results":"57","hashOfConfig":"41"},{"size":861,"mtime":1616664569630,"results":"58","hashOfConfig":"41"},{"size":64,"mtime":1616582323611,"results":"59","hashOfConfig":"41"},{"size":3181,"mtime":1616733016726,"results":"60","hashOfConfig":"41"},{"size":3608,"mtime":1617014860429,"results":"61","hashOfConfig":"41"},{"size":3908,"mtime":1617014358763,"results":"62","hashOfConfig":"41"},{"size":965,"mtime":1617098628363,"results":"63","hashOfConfig":"41"},{"size":632,"mtime":1617101413687,"results":"64","hashOfConfig":"41"},{"size":2309,"mtime":1617159833163,"results":"65","hashOfConfig":"41"},{"size":2426,"mtime":1617246682991,"results":"66","hashOfConfig":"41"},{"size":217,"mtime":1617101578071,"results":"67","hashOfConfig":"41"},{"size":1247,"mtime":1617853824598,"results":"68","hashOfConfig":"41"},{"size":9378,"mtime":1617358180362,"results":"69","hashOfConfig":"41"},{"size":1131,"mtime":1617358032488,"results":"70","hashOfConfig":"41"},{"size":4858,"mtime":1617357911480,"results":"71","hashOfConfig":"41"},{"size":8579,"mtime":1617866375237,"results":"72","hashOfConfig":"41"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"td98w0",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"1xg4ig2",{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"81"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"81"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"81"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"81"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"81"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"81"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"81"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"81"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"81"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"81"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"81"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"81"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"81"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"81"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"81"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"81"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"81"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"81"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"81"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"81"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/media/lap12654/DATA/git/my-git/blog-react-go-mongodb/client/src/App.js",["166"],"/media/lap12654/DATA/git/my-git/blog-react-go-mongodb/client/src/reportWebVitals.js",[],"/media/lap12654/DATA/git/my-git/blog-react-go-mongodb/client/src/index.js",[],"/media/lap12654/DATA/git/my-git/shop-react-go/client/src/reportWebVitals.js",[],["167","168"],"/media/lap12654/DATA/git/my-git/shop-react-go/client/src/App.js",["169"],"import logo from './logo.svg';\nimport './App.css';\nimport './styles/sidebar.css'\n\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport AdminPage from './components/admin/AdminPage';\n\nimport { Container} from \"semantic-ui-react\";\nimport AppHeader from './components/AppHeader';\nimport AppBody from './components/AppBody';\nimport AppFooter from './components/AppFooter';\n\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/admin\">\n                    <AdminPage />\n                </Route>\n\n                {/* <Route path=\"/\"> */}\n                    {/* <UserPage></UserPage> */}\n                {/* </Route> */}\n\n                <Container>\n                    <AppHeader></AppHeader>\n                    <AppBody></AppBody>\n                </Container>\n                <AppFooter></AppFooter>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/index.js",[],"/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/Navbar.js",["170","171","172","173"],"import React, { Component } from 'react'\nimport { Menu, Dropdown } from 'semantic-ui-react'\nimport { Link } from \"react-router-dom\"\nimport { withRouter } from 'react-router-dom'\nimport \"../authen/Authenticate\"\nimport { isAuthenticated } from '../authen/Authenticate'\nimport { PATH_HOME } from \"../pathname/Pathname\"\nimport Cookies from 'js-cookies'\nclass Navbar extends Component {\n\n    constructor(props) {\n        super(props)\n\n        let activeItem = 'home';\n        if (this.props?.location?.state?.active) {\n            activeItem = this.props.location.state.active;\n        }\n\n        this.state = {\n            activeItem: activeItem,\n            isAuthenticated: false,\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            isAuthenticated: isAuthenticated()\n        })\n    }\n\n    componentWillReceiveProps(newProps) {\n        let newActive = newProps?.location?.state?.active;\n        if (newActive != this.state.activeItem) {\n            this.setState({ activeItem: newActive })\n        }\n    }\n\n    handleItemClick = (e, { name }) => {\n        this.setState({ activeItem: name })\n    }\n\n    logout() {\n        fetch(\"/logout\")\n            .then(res => res.json())\n            .then(result => {\n                console.log(result)\n                if (result.error == 0 || result.error == -3) {\n                    this.props.history.push(PATH_HOME)\n                }\n            })\n    }\n\n    render() {\n        const { activeItem } = this.state;\n        let rightMenu = !isAuthenticated() ? (<Menu.Menu position='right'>\n            <Menu.Item as={Link}\n                to={{ pathname: \"/register\", state: { active: \"register\" } }}\n                name='register'\n                active={activeItem === 'register'}\n            />\n            <Menu.Item as={Link}\n                to={{ pathname: \"/login\", state: { active: \"login\" } }}\n                name='login'\n                active={activeItem === 'login'}\n            />\n        </Menu.Menu>) : (\n                <Menu.Menu position='right'>\n                    <Dropdown text='Cá nhân' pointing className='link item'>\n                        <Dropdown.Menu>\n                            <Dropdown.Header>hdlinh1808@gmail.com</Dropdown.Header>\n                            <Dropdown.Item as={Link} to=\"/account\">Thông tin cá nhân</Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Dropdown.Item onClick={() => this.logout()}>Đăng xuất</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Menu.Menu>\n            )\n        return (\n            <div>\n                <Menu style={{ marginTop: \"20px\" }} pointing secondary size='large'>\n                    <Menu.Item as={Link}\n                        to={{ pathname: \"/\", state: { active: \"home\" } }}\n                        name='home'\n                        active={activeItem === 'home'}\n                    />\n                    <Menu.Item\n                        name='messages'\n                        active={activeItem === 'messages'}\n                    />\n                    <Menu.Item\n                        name='friends'\n                        active={activeItem === 'friends'}\n                    />\n                    <Menu.Item as={Link}\n                        to={{ pathname: \"/about\", state: { active: \"about\" } }}\n                        name='about'\n                        active={activeItem === 'about'}\n                    />\n                    {rightMenu}\n                </Menu>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Navbar)\n// export default Navbar\n","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/Test.js",[],["174","175"],"/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/AppHeader.js",["176","177"],"import React, { Component } from 'react'\nimport Navbar from './Navbar';\nimport { Grid } from \"semantic-ui-react\"\nimport { useHistory, useLocation } from 'react-router-dom'\n\n\nclass AppHeader extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             \n        }\n    }\n    \n\n    render() {\n        return (\n            <Grid.Row>\n                <Navbar />\n            </Grid.Row>\n        )\n    }\n}\n\nexport default AppHeader\n","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/AppBody.js",["178"],"import React, { Component } from 'react'\nimport ProductPage from './product/ProductPage';\nimport ProductDetail from './product/ProductDetail'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport About from './About';\nimport Login from './Login'\nimport Register from './Register';\nimport Account from './account/Account';\nimport AccountAddress from './account/AccountListAddress';\n\n\nclass AppBody extends Component {\n    render() {\n        return (\n            <div className=\"app-body\">\n                <Switch>\n                    <Route path=\"/\" exact component={ProductPage}></Route>\n                    <Route path=\"/about\" component={About}></Route>\n                    <Route path=\"/login\" component={Login}></Route>\n                    <Route path=\"/product/:id\" component={ProductDetail}></Route>\n                    <Route path=\"/register\" component={Register}></Route>\n                    <Route path=\"/account\" exact component={Account}></Route>\n                    <Route path=\"/account/address\" component={AccountAddress}></Route>\n                </Switch>\n            </div>\n        )\n    }\n}\n\nexport default AppBody\n","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/AppFooter.js",["179","180"],"import React, { Component } from 'react'\nimport \"../styles/footer.css\"\nimport { Container, Grid, Item, Feed, Icon, List } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nconst necessaryInfo = [\n    { title: \"Giới thiệu shop\", to: { pathname: \"/about\", state: { active: \"about\" } } },\n    { title: \"Chính sách bảo mật thông tin\" },\n    { title: \"Hướng dẫn đặt hàng\" },\n    { title: \"Phương thức đổi trả\" },\n    { title: \"Phương thức vận chuyển\" },\n]\n\nclass AppFooter extends Component {\n    render() {\n        let necessaryInfoList = necessaryInfo.map((info, index) =>\n            <List.Item as={Link} to={info.to ? info.to : \"\"} key={index}>\n                <Icon name='right triangle' />\n                <List.Content>\n                    <List.Description>\n                        {info.title}\n                    </List.Description>\n                </List.Content>\n            </List.Item>)\n\n        return (\n            <div className=\"footer\">\n                <Container>\n                    <Grid>\n                        <Grid.Column tablet={16} computer={6}>\n                            <div className=\"title\">\n                                Thông tin liên hệ\n                            </div>\n                            <List relaxed>\n                                <List.Item>\n                                    <List.Icon name='address book' size='large' verticalAlign='middle' />\n                                    <List.Content>\n                                        <List.Header>Địa chỉ</List.Header>\n                                        <List.Description>146A Phan Văn Trị, phường 12, quận Bình Thạnh, TP.HCM.</List.Description>\n                                    </List.Content>\n                                </List.Item>\n                                <List.Item>\n                                    <List.Icon name='phone square' size='large' verticalAlign='middle' />\n                                    <List.Content>\n                                        <List.Header>Số điện thoại</List.Header>\n                                        <List.Description>028 3841 0316</List.Description>\n                                    </List.Content>\n                                </List.Item>\n                                <List.Item>\n                                    <List.Icon name='mail outline' size='large' verticalAlign='middle' />\n                                    <List.Content>\n                                        <List.Header>Email</List.Header>\n                                        <List.Description>takishop2012@gmail.com</List.Description>\n                                    </List.Content>\n                                </List.Item>\n                                <List.Item>\n                                    <List.Icon name='clock outline' size='large' verticalAlign='middle' />\n                                    <List.Content>\n                                        <List.Header>Thời gian làm việc</List.Header>\n                                        <List.Description>Tất cả các ngày trong tuần / 9:00 AM - 8:00 PM</List.Description>\n                                    </List.Content>\n                                </List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column tablet={16} computer={5}>\n                            <div className=\"title\">\n                                Thông tin cần biết\n                            </div>\n                            <List divided relaxed>\n                                {necessaryInfoList}\n                            </List>\n                        </Grid.Column>\n\n                    </Grid>\n\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default AppFooter\n","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/product/ProductListView.js",["181","182"],"import React, { Component } from 'react'\nimport { Grid, Dropdown, GridRow, Pagination, GridColumn } from 'semantic-ui-react';\nimport ProductItem from './ProductItem';\nimport StyledContentLoader from 'styled-content-loader';\n\n\nconst sortOptions = [{ key: 'new', value: 'new', text: 'New' },\n{ key: 'popular', value: 'popular', text: 'Popular' },\n{ key: 'price_desc', value: 'price_desc', text: 'Price (desc)' },\n{ key: 'price_asc', value: 'price_asc', text: 'Price (asc)' }];\n\n\nclass ProductListView extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            numItemPerRow: 4,\n            items: new Array(12).fill(null),\n            sortOptionSelect: 'new',\n            activePage: 1,\n            totalPages: 1,\n        }\n    }\n\n    setItem(items) {\n        this.setState({\n            items: items,\n        })\n    }\n\n    componentDidMount() {\n        this.fetchItems();\n    }\n\n    fetchItems() {\n        fetch('https://fakestoreapi.herokuapp.com/products')\n            .then(response => response.json())\n            .then(result => this.setItem(result));\n    }\n\n    handleSortOptionChange(e, target) {\n        let option = target?.value;\n        this.setState({\n            sortOptionSelect: option,\n        }, () => {\n            console.log(this.state)\n        })\n    }\n\n    handlePaginationChange(e, target) {\n        this.setState({\n            activePage: target.activePage,\n        })\n    }\n\n    render() {\n        var rows = [];\n        let items = this.state.items;\n        for (let i = 0; i < items.length; i++) {\n            let item = items[i];\n            rows.push(<ProductItem item={item} key={item ? item.id : i} ></ProductItem>)\n        }\n\n        return (\n            <div>\n                <GridRow className=\"filter\">\n                    Sort by: <Dropdown selection placeholder='' options={sortOptions}\n                        onChange={(e, target) => this.handleSortOptionChange(e, target)}\n                        defaultValue={this.state.sortOptionSelect} />\n                </GridRow>\n\n                <Grid stackable doubling columns={this.state.numItemPerRow} className=\"content\">\n                    {rows}\n                </Grid>\n\n                <Grid className='listview-footer no-margin' >\n                    <Grid.Column>\n                        <Pagination floated='right'\n                            siblingRange={1}\n                            boundaryRange={0}\n                            // ellipsisItem={null}\n                            firstItem={null}\n                            lastItem={null}\n                            activePage={this.state.activePage}\n                            onPageChange={(e, target) => this.handlePaginationChange(e, target)}\n                            totalPages={50}\n                        />\n                    </Grid.Column>\n                </Grid>\n\n            </div>\n\n        )\n    }\n}\n\nexport default ProductListView\n","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/product/ProductSidebar.js",["183","184","185"],"import React, { Component } from 'react'\nimport { Grid, Menu, Icon, Button, Sidebar } from 'semantic-ui-react'\n\nclass ProductSidebar extends Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n\n    setVisible(visible) {\n        this.props.setVisibleSidebar(visible)\n    }\n\n\n    render() {\n        return (\n            // <Sidebar></Sidebar>\n            <Sidebar\n                as={Menu}\n                animation='push'\n                icon='labeled'\n                inverted\n                vertical\n                visible={this.props.visible}\n                className=\"product-sidebar\"\n                >\n                <Menu.Item as='a'><Icon name='home' />Home</Menu.Item>\n                <Menu.Item as='a'><Icon name='gamepad' />Games</Menu.Item>\n                <Menu.Item as='a'><Icon name='camera' />Channels</Menu.Item>\n            </Sidebar>\n        )\n    }\n}\n\nexport default ProductSidebar\n","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/product/ProductPage.js",["186"],"import React, { Component } from 'react'\nimport { Grid, Sidebar, GridRow, Checkbox } from \"semantic-ui-react\";\nimport ProductListView from './ProductListView';\nimport ProductSidebar from './ProductSidebar';\nimport { withRouter } from 'react-router-dom'\n// import \"../../styles/sidebar.css\"\nexport class ProductPage extends Component {\n\n    constructor(props) {\n        super(props)\n        let visible = false;\n        if (window.innerWidth >= 991) {\n            visible = true;\n        }\n        this.state = {\n            visibleSidebar: visible,\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    componentWillUnmount() {\n    }\n\n    setVisibleSidebar(visible) {\n\n        if (window.innerWidth >= 991) {\n            visible = true;\n        }\n        this.setState({\n            visibleSidebar: visible\n        })\n    }\n\n    render() {\n        return (\n            <Grid>\n                <GridRow only='mobile tablet'>\n                    <Grid.Column>\n                        <Checkbox\n                            checked={this.state.visibleSidebar}\n                            label={{ children: <code>visible</code> }}\n                            onChange={(e, data) => this.setVisibleSidebar(data.checked)}\n                        />\n                    </Grid.Column>\n                </GridRow>\n                <GridRow>\n                    <Sidebar.Pushable className='custom'>\n                        <ProductSidebar visible={this.state.visibleSidebar} setVisibleSidebar={(visible) => this.setVisibleSidebar(visible)} />\n                        <div className=\"pusher-computer\">\n                            <ProductListView></ProductListView>\n                        </div>\n                    </Sidebar.Pushable>\n                </GridRow>\n            </Grid>\n        )\n    }\n}\n\nexport default ProductPage\n","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/product/ProductItem.js",["187"],"import { Link } from 'react-router-dom'\nimport React, { Component } from 'react'\nimport { GridColumn, Label } from 'semantic-ui-react'\nimport ContentLoader from 'react-content-loader';\n\nimport \"../../styles/img.css\"\nimport DirectionImage from '../DirectionImage';\n\nconst getItemLoader = () => (\n    <ContentLoader viewBox=\"0 0 400 635\">\n        {/* Only SVG shapes */}\n        <rect x=\"3\" y=\"3\" rx=\"5\" ry=\"5\" width=\"393\" height=\"393\" />\n        <rect x=\"8\" y=\"424\" rx=\"5\" ry=\"5\" width=\"64\" height=\"41.5\" />\n        <rect x=\"8\" y=\"480\" rx=\"5\" ry=\"5\" width=\"130\" height=\"51.2\" />\n        <rect x=\"150\" y=\"480\" rx=\"5\" ry=\"5\" width=\"130\" height=\"51.2\" />\n        <rect x=\"8\" y=\"544\" rx=\"5\" ry=\"5\" width=\"390\" height=\"51.2\" />\n    </ContentLoader>\n)\n\nexport class ProductItem extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        const item = this.props.item\n        if (item == null) {\n            return (\n                <GridColumn className=\"item-wrapper\">\n                    {getItemLoader()}\n                </GridColumn>\n            )\n        }\n        return (\n            <GridColumn as={Link} className=\"item-wrapper\" to={`/product/${item.id}`}>\n                <div className=\"item\">\n                    <DirectionImage imgSrc={item.image} loaded={false}></DirectionImage>\n\n                    <div className=\"item-footer\">\n                        <div className=\"product-info\">\n                            <Label color='pink' className=\"sale\">\n                                -20%\n                        </Label>\n                        </div>\n\n                        <div className=\"price-wrapper\">\n                            <Label.Group tag>\n                                <Label className=\"price origin\">$10.00</Label>\n                                <Label className=\"price\" color=\"blue\">${item.price}</Label>\n                            </Label.Group>\n                        </div>\n\n                        <div className=\"title\">\n                            {item.title}\n                        </div>\n                    </div>\n                </div>\n            </GridColumn>\n        )\n    }\n}\n\nexport default ProductItem\n","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/About.js",[],"/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/Login.js",["188","189","190","191","192"],"import React, { Component } from 'react'\nimport { Grid, Header, Image, Form, Segment, Button, Message, Label } from 'semantic-ui-react'\nimport \"../styles/login.css\"\nimport { Link, Redirect, withRouter } from 'react-router-dom'\nimport { PATH_HOME } from \"../pathname/Pathname\"\nimport { isAuthenticated } from '../authen/Authenticate'\nexport class Login extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            onValidate: false,\n            isClicked: false,\n        }\n\n\n        if (isAuthenticated()) {\n            this.props.history.push(PATH_HOME)\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            isClicked: false,\n        })\n    }\n\n    login() {\n        this.setState({\n            isClicked: true,\n        })\n\n        let data = {\n            email: this.state.email,\n            password: this.state.password\n        }\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(data)\n        }\n\n\n        fetch('/login', requestOptions)\n            .then(res => res.json())\n            .then(data => {\n                if (data.error >= 0) {\n                    this.props.history.push(PATH_HOME)\n                }\n            })\n    }\n\n    render() {\n        let errorEmail = this.state.email == \"\" && this.state.isClicked ? {content: \"Email không hợp lệ!\"} : null\n        let errorPassword = this.state.password == \"\" && this.state.isClicked ? {content: \"Password không được để trống\"} : null\n        return (\n            <Grid textAlign='center' verticalAlign='middle' className=\"login-form-wrapper\">\n                <Grid.Column style={{ maxWidth: 450 }}>\n                    <Header as='h2' color='black' textAlign='center'>\n                        {/* <Image src='/logo.png' />  */}\n                        Log-in to your account\n                    </Header>\n                    <Form size='large'>\n                        <Segment stacked>\n                            <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' onChange={(e, data) => this.setState({ email: data?.value })}\n                                error={errorEmail}\n                            />\n                            <Form.Input onChange={(e, data) => this.setState({ password: data?.value })}\n                                fluid\n                                icon='lock'\n                                iconPosition='left'\n                                placeholder='Password'\n                                type='password'\n                                error={errorPassword}\n                            />\n\n                            <Button color='black' fluid size='large' onClick={() => this.login()}>\n                                Login\n                            </Button>\n                        </Segment>\n                    </Form>\n                    <Message>\n                        New to us? <Link to={{ pathname: \"/register\", state: { active: \"register\" } }}>Sign Up</Link>\n                    </Message>\n                </Grid.Column>\n            </Grid>\n        )\n    }\n}\n\nexport default withRouter(Login)\n","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/product/ProductDetail.js",["193"],"import React, { Component } from 'react'\n\nimport \"../../styles/product-detail.css\"\nimport { Grid, GridColumn, Label, Input, Button, Icon } from 'semantic-ui-react';\nimport DirectionImage from '../DirectionImage';\nimport ContentLoader from 'react-content-loader';\n\nconst getContentDetailLoader = () => (\n    <ContentLoader viewBox=\"0 0 550 550\">\n        {/* Only SVG shapes */}\n        <rect x=\"0\" y=\"20\" rx=\"5\" ry=\"5\" width=\"400\" height=\"30\" />\n        <rect x=\"0\" y=\"70\" rx=\"5\" ry=\"5\" width=\"150\" height=\"26\" />\n        <rect x=\"0\" y=\"111\" rx=\"5\" ry=\"5\" width=\"170\" height=\"23\" />\n        <rect x=\"0\" y=\"151\" rx=\"5\" ry=\"5\" width=\"160\" height=\"23\" />\n        <rect x=\"0\" y=\"195\" rx=\"2\" ry=\"2\" width=\"500\" height=\"15\" />\n        <rect x=\"0\" y=\"217\" rx=\"2\" ry=\"2\" width=\"500\" height=\"15\" />\n        <rect x=\"0\" y=\"239\" rx=\"2\" ry=\"2\" width=\"500\" height=\"15\" />\n        <rect x=\"0\" y=\"261\" rx=\"2\" ry=\"2\" width=\"500\" height=\"15\" />\n        <rect x=\"0\" y=\"283\" rx=\"2\" ry=\"2\" width=\"200\" height=\"15\" />\n        <rect x=\"0\" y=\"330\" rx=\"2\" ry=\"2\" width=\"100\" height=\"19\" />\n        <rect x=\"0\" y=\"363\" rx=\"2\" ry=\"2\" width=\"150\" height=\"37\" />\n        <rect x=\"0\" y=\"430\" rx=\"2\" ry=\"2\" width=\"120\" height=\"45\" />\n    </ContentLoader>\n)\n\nclass ProductDetail extends Component {\n    constructor(props) {\n        super(props)\n\n        let id = this.props.match.params?.id;\n\n        this.state = {\n            id: id,\n            itemInfo: {},\n            imageSrc: [],\n            mainImageSrc: \"\",\n            buyNumber: 1,\n            loaded: false,\n        }\n    }\n\n    setItemInfo(itemInfo) {\n        this.setState({\n            itemInfo: itemInfo,\n            mainImageIndex: 0,\n            imageSrc: [\n                itemInfo?.image,\n                \"https://fakestoreapi.com/img/61U7T1koQqL._AC_SX679_.jpg\",\n                \"https://fakestoreapi.com/img/81Zt42ioCgL._AC_SX679_.jpg\",\n                \"https://fakestoreapi.com/img/61mtL65D4cL._AC_SX679_.jpg\",\n\n            ],\n            loaded: true,\n        }, () => {\n            console.log(this.state.itemInfo.image)\n        })\n    }\n\n    componentDidMount() {\n        this.fetchItemInfo();\n    }\n\n    fetchItemInfo() {\n        fetch(`https://fakestoreapi.com/products/${this.state.id}`)\n            .then(response => response.json())\n            .then(result => this.setItemInfo(result));\n    }\n\n    changeMainImage(index) {\n        this.setState({ mainImageIndex: index })\n    }\n\n    handleButtonBuyNumberClick(changeNumber) {\n        let newValue = this.state.buyNumber + changeNumber;\n        this.changeBuyNumber(newValue)\n    }\n\n    handleBuyNumberChange(e, target) {\n        let value = target?.value;\n        this.changeBuyNumber(value);\n    }\n\n    changeBuyNumber(value) {\n        if (value < 1) {\n            value = 1;\n        }\n        this.setState({\n            buyNumber: value,\n        })\n    }\n\n    getContentInfo() {\n        return (<div className=\"content\">\n            <div className=\"product-name\">{this.state.itemInfo.title}</div>\n            <div className=\"category\">\n                <Label as='a' color='teal' tag>\n                    {this.state.itemInfo.category}\n                </Label>\n            </div>\n            <div className=\"price-wrapper\">\n                <span className=\"origin-price\">100 đ</span>\n                <span className=\"sale-price\">{this.state.itemInfo.price}</span>\n            </div>\n            <div className=\"description\">\n                <h3>Description: </h3>\n                <p className=\"content\">{this.state.itemInfo.description}</p>\n            </div>\n\n            <div className=\"buy-wrapper\">\n                <h4>Số lượng</h4>\n                <div>\n                    <Input type='number' value={this.state.buyNumber} className='number' onChange={(e, target) => this.handleBuyNumberChange(e, target)}>\n                        <Button icon='minus' basic className='btn-control left' onClick={() => this.handleButtonBuyNumberClick(-1)}></Button>\n                        <input />\n                        <Button icon='plus' basic className='btn-control right' onClick={() => this.handleButtonBuyNumberClick(1)}></Button>\n                    </Input>\n                </div>\n\n                <div className=\"btn-buy-wrapper\">\n                    <Button animated='fade' primary size='large'>\n                        <Button.Content visible className=\"text\">Đặt mua</Button.Content>\n                        <Button.Content hidden>\n                            <Icon name='shop' />\n                        </Button.Content>\n                    </Button>\n                </div>\n            </div>\n        </div>);\n    }\n\n    render() {\n        let mainImageIndex = this.state.mainImageIndex;\n        let listImages = this.state.imageSrc.map((src, index) => {\n            return (\n                <Grid.Column className=\"child-image-wrapper\" mobile={8} computer={3} key={index}>\n                    <div className={\"child-image\" + (index == mainImageIndex ? \" active\" : \"\")} onClick={() => this.changeMainImage(index)}>\n                        <DirectionImage imgSrc={src} loaded></DirectionImage>\n                    </div>\n                </Grid.Column>\n            )\n        });\n\n        let mainImage = this.state.imageSrc[this.state.mainImageIndex];\n        let content = null;\n\n        if (this.state.loaded) {\n            content = this.getContentInfo();\n        } else {\n            content = getContentDetailLoader();\n        }\n\n        return (\n            <div className='item-detail-container'>\n                <Grid>\n                    <Grid.Column mobile={16} computer={8}>\n                        <div className=\"main-image\">\n                            <DirectionImage imgSrc={mainImage} loaded={true}></DirectionImage>\n                        </div>\n                        <Grid>\n                            {listImages}\n                        </Grid>\n                    </Grid.Column>\n                    <GridColumn mobile={16} computer={8}>   \n                        {content}\n                    </GridColumn>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default ProductDetail\n","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/DirectionImage.js",[],"/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/Register.js",["194","195","196","197","198","199"],"import React, { Component } from 'react'\nimport { Grid, Form, Header, Icon, Label, Dropdown, Button } from 'semantic-ui-react'\nimport SemanticDatepicker from 'react-semantic-ui-datepickers';\n\nimport 'react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css';\nimport \"../styles/register.css\"\nimport { Link } from 'react-router-dom';\nimport { PATH_HOME } from \"../pathname/Pathname\"\nimport { isAuthenticated } from '../authen/Authenticate'\nconst genderOptions = [\n    { key: 'male', value: 'male', text: 'Male' },\n    { key: 'female', value: 'female', text: 'Female' },\n    { key: 'other', value: 'other', text: 'Other' },\n]\nexport class Register extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            gender: 'male',\n            birthday: new Date(),\n            name: { valid: true, value: \"\", error: null },\n            email: { valid: true, value: \"\", error: null },\n            password: { valid: true, value: \"\", error: null },\n            repassword: { valid: true, value: \"\", error: null },\n            isClickRegister: false,\n        }\n\n        if (isAuthenticated()) {\n            this.props.history.push(PATH_HOME)\n        }\n\n    }\n\n    componentDidMount() {\n        this.setState({\n            isClickRegister: false,\n        })\n\n        this.handleNameInputChange({ target: { value: \"\" } })\n        this.handleEmailInputChange({ target: { value: \"\" } })\n        this.handlePasswordInputChange({ target: { value: \"\" } })\n        // this.handleRepasswordInputChange({ target: { value: \"\" } })\n    }\n\n    changeBirthday(date) {\n        if (date == this.state.birthday) {\n            return;\n        }\n        this.setState({\n            birthday: date,\n        })\n    }\n\n    handleNameInputChange(e) {\n        let value = e.target.value;\n        let valid = true;\n        let error = null;\n        if (value == \"\") {\n            valid = false;\n            error = \"Vui lòng nhập họ và tên!\";\n        } else if (value.length < 5 || value.length > 50) {\n            valid = false;\n            error = \"Họ và tên yêu cầu từ 5 đến 50 kí tự.\"\n        }\n\n        this.setState({\n            name: { valid: valid, value: value, error: error },\n        })\n    }\n\n    handleEmailInputChange(e) {\n        let value = e.target.value;\n        let valid = true;\n        let error = null;\n        if (value == \"\") {\n            valid = false;\n            error = \"Vui lòng nhập Email!\";\n        } else if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value)) {\n            valid = false;\n            error = \"Email không hợp lệ.\"\n        }\n        else if (value.length < 5 || value.length > 255) {\n            valid = false;\n            error = \"Email yêu cầu từ 5 đến 255 kí tự.\"\n        }\n\n        this.setState({\n            email: { valid: valid, value: value, error: error },\n        })\n    }\n\n    handlePasswordInputChange(e) {\n        let value = e.target.value;\n        let valid = true;\n        let error = null;\n        if (value == \"\") {\n            valid = false;\n            error = \"Vui lòng nhập mật khẩu!\";\n        } else if (!/^(?=.*[A-Z])(?=.*[0-9])(?=.*[a-z]).{8,}$/.test(value)) {\n            valid = false;\n            error = \"Mật khẩu không hợp lệ. Mật khẩu yêu cầu ít nhất 8 kí tự, bắt buộc có chữ thường, chữ hoa và số!\"\n        }\n\n        this.setState({\n            password: { valid: valid, value: value, error: error },\n        }, () => {\n            // console.log(this.state.repassword)\n            this.handleRepasswordInputChange({ target: { value: this.state.repassword.value } });\n        })\n    }\n\n    handleRepasswordInputChange(e) {\n        let value = e.target.value;\n        let valid = true;\n        let error = null;\n        if (value == \"\") {\n            valid = false;\n            error = \"Không được bỏ trống!\";\n        } else if (value != this.state.password.value) {\n            valid = false;\n            error = \"Không khớp với mật khẩu\"\n        }\n        this.setState({\n            repassword: { valid: valid, value: value, error: error },\n        })\n    }\n\n    handleGenderChange({ value }) {\n        this.setState({\n            gender: value,\n        })\n    }\n\n    submitRegister() {\n        this.setState({\n            isClickRegister: true,\n        })\n\n        let data = {\n            name: this.state.name.value,\n            email: this.state.email.value,\n            password: this.state.password.value,\n            gender: this.state.gender,\n            birthday: this.state.birthday,\n        }\n\n        console.log(data);\n    }\n\n    render() {\n        return (\n            <Grid className=\"register-wrapper\">\n                <Grid.Column computer={4}></Grid.Column>\n                <Grid.Column mobile={16} tablet={16} computer={8}>\n                    <Header as='h2' icon>\n                        <Icon name='address card' />\n                            Đăng kí tài khoản\n                            <Header.Subheader>\n                            Đăng kí tài khoản để bắt đầu mua hàng\n                            </Header.Subheader>\n                    </Header>\n                    <Form className=\"register-form\">\n                        <Form.Field error={!this.state.name?.valid && this.state.isClickRegister}>\n                            <label>Họ và tên<span className=\"required\" /></label>\n                            <input placeholder='Họ và tên' onChange={(e) => this.handleNameInputChange(e)} value={this.state.name?.value} />\n                            <Label pointing prompt style={{ display: !this.state.name?.valid && this.state.isClickRegister ? \"\" : \"none\" }}>{this.state.name?.error}</Label>\n                        </Form.Field>\n                        <Form.Field error={!this.state.email?.valid && this.state.isClickRegister}>\n                            <label>Email<span className=\"required\" /></label>\n                            <input placeholder='Email' type=\"email\" onChange={(e) => this.handleEmailInputChange(e)} value={this.state.email?.value} />\n                            <Label pointing prompt style={{ display: !this.state.email?.valid && this.state.isClickRegister ? \"\" : \"none\" }}>{this.state.email?.error}</Label>\n                        </Form.Field>\n                        <Form.Field error={!this.state.password?.valid && this.state.isClickRegister}>\n                            <label>Mật khẩu<span className=\"required\" /></label>\n                            <input placeholder='Password' type=\"password\" onChange={(e) => this.handlePasswordInputChange(e)} value={this.state.password?.value} />\n                            <Label pointing prompt style={{ display: !this.state.password?.valid && this.state.isClickRegister ? \"\" : \"none\" }}>{this.state.password?.error}</Label>\n                        </Form.Field>\n                        <Form.Field error={!this.state.repassword?.valid && this.state.isClickRegister}>\n                            <label>Nhập lại mật khẩu<span className=\"required\" /></label>\n                            <input placeholder='Password' type=\"password\" onChange={(e) => this.handleRepasswordInputChange(e)} value={this.state.repassword?.value} />\n                            <Label pointing prompt style={{ display: !this.state.repassword?.valid && this.state.isClickRegister ? \"\" : \"none\" }}>{this.state.repassword?.error}</Label>\n                        </Form.Field>\n                        <Form.Field>\n                            <label>Giới tính<span className=\"required\" /></label>\n                            <Dropdown selection placeholder='' options={genderOptions}\n                                onChange={(e, data) => this.handleGenderChange(data)}\n                                defaultValue={this.state.gender} />\n                        </Form.Field>\n                        <Form.Field className=\"date-picker\">\n                            <label>Ngày sinh<span className=\"required\" /></label>\n                            <SemanticDatepicker clearable={false} onChange={(e, data) => { this.changeBirthday(data.value) }}\n                                format=\"DD-MM-YYYY\"\n                                value={this.state.birthday}\n                            ></SemanticDatepicker>\n                        </Form.Field>\n                        <div className=\"form-footer\">\n                            <Button type=\"submit\" size='large' color='blue' onClick={() => this.submitRegister()}>\n                                <Icon name='address card' /> Đăng kí\n                            </Button>\n                            <Button size='large' color='black' as={Link} to={{ pathname: \"/login\", state: { active: \"login\" } }}>\n                                <Icon name='angle right' /> Đăng nhập\n                            </Button>\n                        </div>\n                    </Form>\n\n                </Grid.Column>\n            </Grid>\n        )\n    }\n}\n\nexport default Register\n","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/authen/Authenticate.js",["200","201"],"import Cookies from 'js-cookies'\n\nconst key = \"shopsess\"\nvar user = null\n\n// async function checkAuthen() {\n//     if (!!!Cookies.getIte(key)) {\n//         return false\n//     }\n\n//     if (user == null) {\n//         let res = await fetch(\"/users/by-cookie\")\n//         console.log(res)\n//         return false\n//     } else {\n//         return !!Cookies.getItem(key)\n//     }\n// }\n\n\nexport const getUser = async () => {\n    if (!isAuthenticated()) {\n        return null;\n    }\n\n    let res = await fetch(\"/users/by-cookie\")\n    let data = await res.json()\n    console.log(data)\n    return data\n}\n\nexport const isAuthenticated = () => !!Cookies.getItem(key)\n\nexport const authenticate = async () => {\n    try {\n        let id = Cookies.getItem(key);\n        return id != null && id != \"\"\n    } catch (err) {\n        console.log(err);\n    }\n    return false;\n}\n\n","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/pathname/Pathname.js",[],"/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/account/Account.js",["202"],"import React, { Component } from 'react'\nimport { getUser } from '../../authen/Authenticate'\nimport { Grid, Header, Form, Button, Icon } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nexport class Account extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            user: null,\n            isUpdate: false\n        }\n    }\n\n    componentDidMount() {\n        getUser()\n            .then(data => {\n                this.setState({\n                    user: data?.data\n                })\n            })\n    }\n\n    validateName(value) {\n        if (value == null || value == \"\") {\n            return \"Vui lòng nhập họ và tên!\";\n        } else if (value.length < 5 || value.length > 50) {\n            return \"Họ và tên yêu cầu từ 5 đến 50 kí tự.\"\n        }\n\n        return null;\n    }\n\n    update() {\n        if (!this.state.isUpdate) {\n            this.setState({\n                isUpdate: true,\n            })\n        }\n    }\n\n    render() {\n        let validateName = this.validateName(this.state.user?.name)\n        let error = validateName && this.state.isUpdate ? { content: validateName } : null\n        return (\n            <Grid verticalAlign='middle' textAlign=\"center\" style={{ marginTop: \"20px\" }}>\n                <Grid.Column mobile={16} tablet={16} computer={8} >\n                    <Header as='h2'>\n                        Thông tin cá nhân\n                    </Header>\n\n                    <Form size=\"small\" style={{ textAlign: \"left\" }}>\n                        <Form.Input\n                            label=\"Họ và tên\"\n                            value={this.state.user?.name ? this.state.user.name : \"\"}\n                            onChange={(e) => this.setState({ user: { ...this.state.user, name: e.target.value } })}\n                            error={error}\n                        />\n\n                        <Form.Input\n                            label=\"Email\"\n                            value={this.state.user?.email ? this.state.user.email : \"\"}\n                            readOnly\n                        />\n\n                        <Form.Input\n                            type=\"number\"\n                            label=\"Số điện thoại\"\n                            value={this.state.user?.phone ? this.state.user.phone : \"\"}\n                            onChange={(e) => this.setState({ user: { ...this.state.user, phone: e.target.value } })}\n                        />\n\n                        <div className=\"form-footer\">\n                            <Button color='black' size='large'  onClick={() => this.update()} >\n                                <Icon name='edit outline'/> Cập nhật\n                            </Button>\n\n                            <Button color='black' size='large'\n                            as={Link} to=\"/account/address\"\n                            >\n                                <Icon name='address card' /> Sổ địa chỉ\n                            </Button>\n                        </div>\n\n                    </Form>\n\n                </Grid.Column>\n            </Grid>\n        )\n    }\n}\n\nexport default Account\n","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/account/AccountListAddress.js",["203","204"],"import React, { Component, Fragment } from 'react'\nimport { Grid, Header, Button, Icon, Divider, Message } from 'semantic-ui-react'\nimport ModalAddress from './ModalAddress';\n\n\nexport class AccountAddress extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            open: false,\n            addresses: [{ type: \"home\", \"addr\": \"VNG Campus Lô Z.06 Đường 13, Khu Chế Xuất Tân Thuận, Phường Tân Thuận Đông, Quận 7, Hồ Chí Minh\" }],\n            updateAddress: null,\n            updateAddressIndex: -1,\n        }\n    }\n\n\n    closeModal() {\n        this.setState({\n            open: false,\n            updateAddress: null,\n            updateAddressIndex: -1,\n        })\n    }\n\n    openModal() {\n        this.setState({\n            open: true,\n        })\n    }\n\n    genNewAddress() {\n        return {\n            addr: \"\",\n            type: \"home\",\n        }\n    }\n\n    updateAddresses(address) {\n\n        if (this.state.updateAddressIndex >= -1 && this.state.updateAddress) { //update\n            let addresses = [...this.state.addresses]\n            let index = this.state.updateAddressIndex\n            if (index < addresses.length) {\n                addresses[index] = address;\n                this.setState({\n                    addresses: addresses\n                })\n            }\n\n            return;\n        }\n\n        //add new Address\n        this.setState({\n            addresses: [...this.state.addresses, address]\n        })\n    }\n\n    removeAddress(index) {\n        if (index < 0) {\n            return;\n        }\n        let addresses = [...this.state.addresses];\n        addresses.splice(index, 1)\n        this.setState({\n            addresses: addresses,\n        })\n    }\n\n    changeAddress(address, index) {\n        this.setState({\n            updateAddress: address,\n            updateAddressIndex: index,\n            open: true,\n        })\n    }\n\n    render() {\n        let addresses = this.state.addresses.map((address, index) =>\n            (<Message style={{ fontSize: \"12px\" }} icon key={index}>\n                <Message.Content>\n                    <Message.Header>{address.type == \"home\" ? \"Nhà riêng\" : \"công ti\"}</Message.Header>\n                    {address.addr}\n                </Message.Content>\n                <Button icon style={{ fontSize: \"12px\" }} basic color=\"teal\" onClick={() => this.changeAddress(address, index)}>\n                    <Icon name='edit' />\n                </Button>\n\n                <Button icon style={{ fontSize: \"12px\" }} basic color=\"red\" onClick={() => this.removeAddress(index)}>\n                    <Icon name='trash alternate' />\n                </Button>\n            </Message>)\n        )\n        return (\n            <Grid verticalAlign='middle' textAlign=\"center\" style={{ marginTop: \"20px\" }}>\n                <Grid.Column mobile={16} tablet={16} computer={12} textAlign=\"left\">\n                    <Header as='h2'>\n                        Sổ địa chỉ\n                    </Header>\n\n                    <Button color=\"black\" onClick={() => this.openModal()}>\n                        <Icon name='plus' /> Thêm địa chỉ mới\n                    </Button>\n                    <Divider></Divider>\n                    {addresses}\n\n                    <ModalAddress open={this.state.open} closeModal={() => this.closeModal()} type={this.state.type} updateAddress={(address) => this.updateAddresses(address)}\n                        address={this.state.updateAddress} />\n                </Grid.Column>\n            </Grid>\n        )\n    }\n}\n\nexport default AccountAddress\n","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/account/ModalAddress.js",[],"/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/admin/AdminPage.js",["205","206","207","208","209","210"],"import React, { Component } from 'react'\nimport { Menu, Header, Image, Grid, Sidebar, Segment, Container } from 'semantic-ui-react'\nimport AdminSidebar from './AdminSidebar'\nimport AdminBody from './AdminBody'\nimport \"../../styles/semantic-custom.css\"\nimport \"../../styles/admin.css\"\n\nexport class AdminPage extends Component {\n    render() {\n        return (\n            <div className=\"admin\">\n                <Grid className=\"no-margin\">\n                    <Grid.Row className=\"no-padding\">\n                        <Grid.Column stretched computer={2} className=\"no-padding sidebar-wrapper\">\n                            <AdminSidebar />\n                        </Grid.Column>\n                        <Grid.Column stretched computer={14} className=\"no-padding\">\n                            <AdminBody/>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n             </div>\n\n        )\n    }\n}\n\nexport default AdminPage\n","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/UserPage.js",[],["211","212"],"/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/admin/AdminSidebar.js",["213"],"import React, { Component } from 'react'\nimport { Menu } from 'semantic-ui-react'\nimport { withRouter, Link } from 'react-router-dom'\n\nclass AdminSidebar extends Component {\n\n    constructor(props) {\n        super(props)\n\n        let activeItem = 'dashboard';\n        if (this.props?.location?.state?.active) {\n            activeItem = this.props.location.state.active;\n        }\n\n        this.state = {\n            activeItem: activeItem,\n            isAuthenticated: false,\n        }\n    }\n\n    componentDidMount(){\n        console.log(\"componentDidMount AdminSidebar\")\n    }\n\n    componentWillReceiveProps(newProps) {\n        let newActive = newProps?.location?.state?.active;\n        if (newActive != this.state.activeItem) {\n            this.setState({ activeItem: newActive })\n        }\n    }\n\n    render() {\n        const { activeItem } = this.state\n        return (\n            <Menu fluid vertical inverted className=\"admin-sidebar\">\n                <Menu.Item as={Link}\n                    name='dashboard'\n                    to={{ pathname: \"/admin\", state: { active: \"dashboard\" } }}\n                    active={activeItem === 'dashboard'}\n                />\n                <Menu.Item>\n                    <Menu.Header>Products</Menu.Header>\n                    <Menu.Menu>\n                        <Menu.Item as={Link}\n                            name='list'\n                            to={{ pathname: \"/admin/product/list\", state: { active: \"product-list\" } }}\n                            active={activeItem === 'product-list'}\n                        />\n                        <Menu.Item as={Link}\n                            name='add new'\n                            to={{ pathname: \"/admin/product/new\", state: { active: \"product-new\" } }}\n                            active={activeItem === 'product-new'}\n                        />\n                    </Menu.Menu>\n                </Menu.Item>\n                <Menu.Item as={Link}\n                    name='category'\n                    to={{ pathname: \"/admin/category\", state: { active: \"category\" } }}\n                    active={activeItem === 'category'}\n                />\n                <Menu.Item\n                    name='about'\n                />\n            </Menu>\n        )\n    }\n}\n\nexport default withRouter(AdminSidebar)\n","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/admin/AdminBody.js",["214","215"],"import React, { Component } from 'react'\nimport { Header, Icon, Segment, Message, Breadcrumb } from 'semantic-ui-react'\nimport { Switch, Route, withRouter, Link } from 'react-router-dom'\nimport Dashboard from './Dashboard'\nimport ProductList from './product/ProductList'\nimport { matchPath } from 'react-router-dom';\nimport Category from './category/Category'\n\nexport class AdminBody extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            title: \"\",\n            breadCrumbs: [],\n        }\n    }\n\n    setTitle(title) {\n        this.setState({\n            title: title,\n        })\n    }\n\n    setBreadCrumbs(breadCrumbs) {\n        if (breadCrumbs != null) {\n            this.setState({\n                breadCrumbs: breadCrumbs,\n            })\n        }\n    }\n\n    renderComponent(Component) {\n        return <Component setTitle={(title) => this.setTitle(title)} setBreadCrumbs={(breadCrumbs) => this.setBreadCrumbs(breadCrumbs)} />\n    }\n\n    render() {\n        let relative = this.props.match.path\n        let breadCrumbs = null;\n\n        breadCrumbs = this.state.breadCrumbs.map(b => {\n            if (b.link)\n                return <Breadcrumb.Section as={Link} to={b.to} link={b.link}>{b.content}</Breadcrumb.Section>\n            return <Breadcrumb.Section active>{b.content}</Breadcrumb.Section>\n        })\n\n        if (this.state.breadCrumbs?.length >= 1) {\n            breadCrumbs = breadCrumbs.reduce((prev, cur) => <>{prev}{<Breadcrumb.Divider />}{cur}</>)\n            breadCrumbs = <Breadcrumb>{breadCrumbs}</Breadcrumb>\n        }\n        return (   \n            <Segment className=\"content\">\n                <Message>\n                    <Header as='h3'>\n                        <Header.Content>{this.state.title}</Header.Content>\n                    </Header>\n                </Message>\n                {breadCrumbs}\n                <Segment>\n                    <Switch>\n                        <Route path={`${relative}`} exact render={(props) => this.renderComponent(Dashboard)} />\n                        <Route path={`${relative}/product/list`} exact render={(props) => this.renderComponent(ProductList)} />\n                        <Route path={`${relative}/category`} exact render={(props) => this.renderComponent(Category)} />\n                    </Switch>\n                </Segment>\n            </Segment>\n        )\n    }\n}\n\nexport default withRouter(AdminBody)\n","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/admin/Dashboard.js",[],"/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/admin/product/ProductList.js",["216"],"/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/admin/category/Category.js",["217","218","219"],"import React, { Component } from 'react'\nimport { getAllCategories, addCategory, deleteCategory, updateCategory } from '../../../model/CategoryModel'\n\nimport { Label, Button, Icon, Table, Pagination, Confirm } from 'semantic-ui-react';\nimport ModelCategory from './ModalCategory';\nimport { SemanticToastContainer, toast } from 'react-semantic-toasts';\nimport 'react-semantic-toasts/styles/react-semantic-alert.css';\n\n\n\nexport class Category extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            category: {\n                root: null,\n                map: null,\n                unParent: null,\n            },\n            openModal: false,\n            updateCategory: null,\n            removeCategoryKey: null,\n        }\n\n        this.props.setTitle(\"Category\")\n        let breadCrumbs = [\n            { to: '/', content: 'Home', link: true },\n            { to: '', content: 'Category', link: false },\n        ]\n        this.props.setBreadCrumbs(breadCrumbs)\n    }\n\n    componentDidMount() {\n        this.loadCategories()\n    }\n\n    loadCategories() {\n        getAllCategories()\n            .then((data) => {\n                this.setState({\n                    category: { ...this.state.category, map: data }\n                })\n\n                let result = this.buildCategoryTree(data);\n                this.setState({\n                    category: {\n                        ...this.state.category,\n                        root: result.root,\n                        unParent: result.unParent,\n                    }\n                }, () => {\n                    console.log(this.state.category)\n                })\n            })\n    }\n\n    buildCategoryTree(data) {\n        let root = [];\n        let unParent = [];\n        let result = { root: root, unParent: unParent }\n\n        // console.log(data)\n        if (data == null) {\n            return result;\n        }\n        let keys = Object.keys(data)\n        keys.forEach(function (catId, index) {\n            let category = data[catId]\n\n            let parentId = category.parentId;\n            if (parentId == null) { // root\n                root.push(category)\n                category.type = 0;\n                return;\n            }\n\n            // delete (category.id)\n            let parent = data[parentId]\n            if (parent == null) { // unparent\n                unParent.push(category)\n                category.type = 1;\n                return;\n            }\n\n            if (parent.childs == null) {\n                parent.childs = []\n            }\n            category.parent = parent;\n            parent.childs.push(category);\n        })\n\n        return {\n            root: root, unParent: unParent,\n        }\n    }\n\n    renderAction() {\n        return (\n            <>\n                <Button icon style={{ fontSize: \"12px\" }} basic color=\"teal\">\n                    <Icon name='edit' />\n                </Button>\n\n                <Button icon style={{ fontSize: \"12px\" }} basic color=\"red\" >\n                    <Icon name='trash alternate' />\n                </Button>\n            </>\n        )\n    }\n\n    table() {\n        return (\n            <Table celled selectable>\n                {this.tableHeader([\"Name\", \"Type\", \"Parent\", \"Action\"])}\n                {this.tableBody()}\n                {this.tableFooter()}\n            </Table>\n        )\n    }\n\n    tableHeader(titles) {\n        let header = <Table.Header>\n            <Table.Row>\n                {titles.map(title => <Table.HeaderCell key={title}>{title}</Table.HeaderCell>)}\n            </Table.Row>\n        </Table.Header>\n        return header;\n    }\n\n    renderAction(key) {\n        return (\n            <>\n                <Button icon style={{ fontSize: \"12px\" }} basic color=\"teal\" onClick={(e) => this.openModalEdit(key)}>\n                    <Icon name='edit' />\n                </Button>\n\n                <Button icon style={{ fontSize: \"12px\" }} basic color=\"red\" onClick={() => this.showConfirmBox(key)}>\n                    <Icon name='trash alternate' />\n                </Button>\n            </>\n        )\n    }\n\n    tableBody() {\n        let data = []\n        let entries = this.state.category?.map ? Object.entries(this.state.category.map) : [];\n        // console.log(entries)\n        for (const [key, c] of entries) {\n            let parentlist = []\n            let type = \"\";\n            if (c.type == 0) {\n                type = <Label tag color=\"red\">root</Label>\n            } else if (c.type == 1) {\n                type = <Label tag>no parent</Label>\n            } else {\n                let p = null;\n                p = c.parent\n                while (p != null) {\n                    parentlist.unshift(p.name)\n                    p = p.parent\n                }\n            }\n            data.push(this.tableBodyRow(key, [c.name, type, parentlist.join(\",\"), this.renderAction(key)]))\n        }\n\n        return (\n            <Table.Body>\n                {data}\n            </Table.Body>\n        );\n    }\n\n    tableBodyRow(key, data) {\n        let row = <Table.Row key={key}>\n            {data.map((cell, index) => <Table.Cell key={index}>{cell}</Table.Cell>)}\n        </Table.Row>\n        return row;\n    }\n\n    tableFooter() {\n        return (\n            <Table.Footer>\n                <Table.Row>\n                    <Table.HeaderCell colSpan='4'>\n                        <Pagination floated='right'\n                            siblingRange={1}\n                            boundaryRange={0}\n                            firstItem={null}\n                            lastItem={null}\n                            activePage={this.state.activePage}\n                            // onPageChange={(e, target) => this.handlePaginationChange(e, target)}\n                            totalPages={50}\n\n                        />\n\n                    </Table.HeaderCell>\n                </Table.Row>\n            </Table.Footer>\n        )\n    }\n\n    openModalAdd() {\n        this.setState({\n            openModal: true,\n            updateCategory: {},\n        })\n    }\n\n    openModalEdit(key) {\n        let c = this.state.category.map[key]\n        this.setState({\n            openModal: true,\n            updateCategory: {\n                ...c,\n                id: key,\n            }\n        })\n    }\n\n    editCategory(category) {\n        category.parent = null;\n        category.childs = null;\n        let handleResult = (data) => {\n            if (data.error < 0) { // fail\n                this.notification(\"error\", data.message)\n            } else { // success\n                this.notification(\"success\", data.message)\n                this.loadCategories();\n            }\n            this.closeModal();\n        }\n\n        if (category.id == null) { // add\n            addCategory(category)\n                .then(data => {\n                    handleResult(data)\n                })\n        } else { // update\n            updateCategory(category, category.id)\n                .then(data => {\n                    // console.log(category, data)\n                    handleResult(data)\n                })\n        }\n    }\n\n\n    deleteCategory(callback) {\n        if (this.state.removeCategoryKey == null) {\n            callback();\n            return;\n        }\n\n        deleteCategory(this.state.removeCategoryKey)\n            .then(data => {\n                if (data.error < 0) {\n                    this.notification(\"error\", data.message)\n                } else {\n                    this.notification(\"success\", data.message)\n                    this.loadCategories();\n                }\n                callback();\n            })\n    }\n\n    closeModal() {\n        this.setState({\n            openModal: false,\n            updateCategory: null,\n        })\n    }\n\n    showConfirmBox(id) {\n        this.setState({\n            removeCategoryKey: id,\n        })\n    }\n\n    closeConfirmBox() {\n        this.setState({\n            removeCategoryKey: null,\n        })\n    }\n\n    notification(type, message) {\n        toast({\n            type: type,\n            description: message,\n            animation: 'bounce',\n            time: 3000,\n            size: \"tiny\",\n        })\n    }\n\n    render() {\n        let table = this.table()\n        let modal = this.state.openModal ? <ModelCategory category={this.state.updateCategory} close={() => this.closeModal()}\n            update={(category) => this.editCategory(category)}\n            root={this.state.category.root}\n            map={this.state.category.map}\n        /> : null\n\n\n        let confirmRemove = this.state.removeCategoryKey ? <Confirm\n            open={true}\n            header='Confirm'\n            content={\"Are you sure to remove category: \" +\n                this.state.category.map[this.state.removeCategoryKey].name}\n            onCancel={() => this.closeConfirmBox()}\n            onConfirm={() => this.deleteCategory(() => this.closeConfirmBox())}\n        /> : null\n        return (\n            <div>\n                <Button color=\"green\" basic onClick={() => this.openModalAdd()}>\n                    <Icon name='plus' /> Add new category\n                </Button>\n                {table}\n\n                {modal} {/* modal add or edit */}\n                {confirmRemove} {/* confirm delete */}\n                <SemanticToastContainer position=\"top-right\" />\n            </div>\n        )\n    }\n}\n\nexport default Category\n","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/model/CategoryModel.js",[],"/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/admin/category/ModalCategory.js",["220","221","222","223","224"],"import React, { Component } from 'react'\nimport { Modal, Form, Button, ButtonGroup, Step } from 'semantic-ui-react'\n\nexport class ModelCategory extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            category: this.props.category,\n            listLevel: [[]],\n            listParent: [],\n        }\n    }\n\n    componentDidMount() {\n        let root = this.props.root;\n        let map = this.props.map;\n        if (root == null) {\n            return;\n        }\n\n        let listLevel = [];\n\n        let p = this.state.category.parent;\n        let listParent = [];\n        while (p != null) {\n            listParent.push(p.id)\n            p = p.parent;\n        }\n\n        listParent = listParent.reverse()\n\n        listLevel.push(root.map(c => c.id))\n        for (let i = 0; i < listParent.length; i++) {\n            let id = listParent[i]\n            let childs = map[id]?.childs;\n            if (childs != null) {\n                listLevel.push(childs.map(c => c.id))\n            }\n        }\n\n        this.setState({\n            listLevel: listLevel,\n            listParent: listParent,\n        })\n    }\n\n    update() {\n        //validate\n        // console.log(this.state.category)\n        this.props.update(this.state.category)\n    }\n\n    handleOnClickParent(id, index) {\n\n        // if(id == this.state.listParent[index]){\n        //     return;\n        // }\n\n        let listParent = [...this.state.listParent].slice(0, index + 1)\n        let listLevel = [...this.state.listLevel].slice(0, index + 1)\n        listParent[index] = id;\n        let childs = this.props.map[id]?.childs;\n        if (childs != null) {\n            listLevel.push(childs.map(c => c.id));\n        }\n\n        this.setState({\n            listParent: listParent,\n            category: { ...this.state.category, parentId: id },\n            listLevel: listLevel,\n        })\n\n    }\n\n    renderLevel() {\n        let map = this.props.map;\n        let parentPicker = this.state.listLevel.map((lv, index) => {\n            if (lv.length > 1 || (lv.length == 1 && lv[0] != this.state.category.id)){\n                return (<div style={{ marginTop: \"10px\" }} key={index}>\n                    <ButtonGroup>\n                        {lv.map(id => {\n                            let c = map[id];\n                            return id != this.state.category.id ? <Button key={id} color='violet' content={c?.name} inverted\n                                onClick={() => this.handleOnClickParent(id, index)}\n                                active={this.state.listParent[index] == id}\n                            /> : null\n                        }\n                        )}\n                    </ButtonGroup>\n                </div>)\n            }\n        })\n\n        let parentDisplay = <Step.Group>\n            {this.state.listParent.map(id => <Step key={id}>{map[id]?.name}</Step>)}\n        </Step.Group>\n        return <>\n            <div>{parentPicker}</div>\n\n            <div style={{ marginTop: \"10px\" }}>{parentDisplay}</div>\n        </>\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal size=\"small\" open>\n                    <Modal.Header>Category</Modal.Header>\n                    <Modal.Content>\n                        <Form>\n                            <Form.Input\n                                label={\"Category\"}\n                                value={this.state.category?.name ?? \"\"}\n                                onChange={(e) => this.setState({ category: { ...this.state.category, name: e.target.value } })}\n                            />\n                            <Form.Input\n                                label=\"Slug\"\n                                value={this.state.category?.slug ?? \"\"}\n                                onChange={(e) => this.setState({ category: { ...this.state.category, slug: e.target.value } })}\n                            />\n                            <Form.Field>\n                                <label>Parent</label>\n                                {this.renderLevel()}\n                            </Form.Field>\n                            <Form.TextArea\n                                label=\"Description\"\n                                value={this.state.category?.description ?? \"\"}\n                                onChange={(e) => this.setState({ category: { ...this.state.category, description: e.target.value } })}\n                            />\n                        </Form>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button negative onClick={() => this.props.close()}>Hủy</Button>\n                        <Button positive onClick={() => this.update()}>Cập nhật</Button>\n                    </Modal.Actions>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default ModelCategory\n","/media/lap12654/DATA/git/my-git/shop-react-go/client/src/components/table/LTable.js",["225","226","227"],{"ruleId":"228","severity":1,"message":"229","line":1,"column":8,"nodeType":"230","messageId":"231","endLine":1,"endColumn":12},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"228","severity":1,"message":"229","line":1,"column":8,"nodeType":"230","messageId":"231","endLine":1,"endColumn":12},{"ruleId":"228","severity":1,"message":"236","line":8,"column":8,"nodeType":"230","messageId":"231","endLine":8,"endColumn":15},{"ruleId":"237","severity":1,"message":"238","line":33,"column":23,"nodeType":"239","messageId":"240","endLine":33,"endColumn":25},{"ruleId":"237","severity":1,"message":"241","line":47,"column":34,"nodeType":"239","messageId":"240","endLine":47,"endColumn":36},{"ruleId":"237","severity":1,"message":"241","line":47,"column":55,"nodeType":"239","messageId":"240","endLine":47,"endColumn":57},{"ruleId":"232","replacedBy":"242"},{"ruleId":"234","replacedBy":"243"},{"ruleId":"228","severity":1,"message":"244","line":4,"column":10,"nodeType":"230","messageId":"231","endLine":4,"endColumn":20},{"ruleId":"228","severity":1,"message":"245","line":4,"column":22,"nodeType":"230","messageId":"231","endLine":4,"endColumn":33},{"ruleId":"228","severity":1,"message":"246","line":4,"column":27,"nodeType":"230","messageId":"231","endLine":4,"endColumn":33},{"ruleId":"228","severity":1,"message":"247","line":3,"column":27,"nodeType":"230","messageId":"231","endLine":3,"endColumn":31},{"ruleId":"228","severity":1,"message":"248","line":3,"column":33,"nodeType":"230","messageId":"231","endLine":3,"endColumn":37},{"ruleId":"228","severity":1,"message":"249","line":2,"column":47,"nodeType":"230","messageId":"231","endLine":2,"endColumn":57},{"ruleId":"228","severity":1,"message":"250","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":27},{"ruleId":"228","severity":1,"message":"251","line":2,"column":10,"nodeType":"230","messageId":"231","endLine":2,"endColumn":14},{"ruleId":"228","severity":1,"message":"252","line":2,"column":28,"nodeType":"230","messageId":"231","endLine":2,"endColumn":34},{"ruleId":"253","severity":1,"message":"254","line":6,"column":5,"nodeType":"255","messageId":"256","endLine":8,"endColumn":6},{"ruleId":"228","severity":1,"message":"257","line":5,"column":10,"nodeType":"230","messageId":"231","endLine":5,"endColumn":20},{"ruleId":"253","severity":1,"message":"254","line":21,"column":5,"nodeType":"255","messageId":"256","endLine":23,"endColumn":6},{"ruleId":"228","severity":1,"message":"258","line":2,"column":24,"nodeType":"230","messageId":"231","endLine":2,"endColumn":29},{"ruleId":"228","severity":1,"message":"259","line":2,"column":63,"nodeType":"230","messageId":"231","endLine":2,"endColumn":68},{"ruleId":"228","severity":1,"message":"260","line":4,"column":16,"nodeType":"230","messageId":"231","endLine":4,"endColumn":24},{"ruleId":"237","severity":1,"message":"241","line":57,"column":43,"nodeType":"239","messageId":"240","endLine":57,"endColumn":45},{"ruleId":"237","severity":1,"message":"241","line":58,"column":49,"nodeType":"239","messageId":"240","endLine":58,"endColumn":51},{"ruleId":"237","severity":1,"message":"241","line":136,"column":60,"nodeType":"239","messageId":"240","endLine":136,"endColumn":62},{"ruleId":"237","severity":1,"message":"241","line":48,"column":18,"nodeType":"239","messageId":"240","endLine":48,"endColumn":20},{"ruleId":"237","severity":1,"message":"241","line":60,"column":19,"nodeType":"239","messageId":"240","endLine":60,"endColumn":21},{"ruleId":"237","severity":1,"message":"241","line":77,"column":19,"nodeType":"239","messageId":"240","endLine":77,"endColumn":21},{"ruleId":"237","severity":1,"message":"241","line":98,"column":19,"nodeType":"239","messageId":"240","endLine":98,"endColumn":21},{"ruleId":"237","severity":1,"message":"241","line":118,"column":19,"nodeType":"239","messageId":"240","endLine":118,"endColumn":21},{"ruleId":"237","severity":1,"message":"238","line":121,"column":26,"nodeType":"239","messageId":"240","endLine":121,"endColumn":28},{"ruleId":"228","severity":1,"message":"261","line":4,"column":5,"nodeType":"230","messageId":"231","endLine":4,"endColumn":9},{"ruleId":"237","severity":1,"message":"238","line":37,"column":33,"nodeType":"239","messageId":"240","endLine":37,"endColumn":35},{"ruleId":"237","severity":1,"message":"241","line":27,"column":36,"nodeType":"239","messageId":"240","endLine":27,"endColumn":38},{"ruleId":"228","severity":1,"message":"262","line":1,"column":28,"nodeType":"230","messageId":"231","endLine":1,"endColumn":36},{"ruleId":"237","severity":1,"message":"241","line":84,"column":51,"nodeType":"239","messageId":"240","endLine":84,"endColumn":53},{"ruleId":"228","severity":1,"message":"263","line":2,"column":10,"nodeType":"230","messageId":"231","endLine":2,"endColumn":14},{"ruleId":"228","severity":1,"message":"264","line":2,"column":16,"nodeType":"230","messageId":"231","endLine":2,"endColumn":22},{"ruleId":"228","severity":1,"message":"258","line":2,"column":24,"nodeType":"230","messageId":"231","endLine":2,"endColumn":29},{"ruleId":"228","severity":1,"message":"265","line":2,"column":37,"nodeType":"230","messageId":"231","endLine":2,"endColumn":44},{"ruleId":"228","severity":1,"message":"266","line":2,"column":46,"nodeType":"230","messageId":"231","endLine":2,"endColumn":53},{"ruleId":"228","severity":1,"message":"267","line":2,"column":55,"nodeType":"230","messageId":"231","endLine":2,"endColumn":64},{"ruleId":"232","replacedBy":"268"},{"ruleId":"234","replacedBy":"269"},{"ruleId":"237","severity":1,"message":"238","line":27,"column":23,"nodeType":"239","messageId":"240","endLine":27,"endColumn":25},{"ruleId":"228","severity":1,"message":"270","line":2,"column":18,"nodeType":"230","messageId":"231","endLine":2,"endColumn":22},{"ruleId":"228","severity":1,"message":"271","line":6,"column":10,"nodeType":"230","messageId":"231","endLine":6,"endColumn":19},{"ruleId":"228","severity":1,"message":"263","line":3,"column":10,"nodeType":"230","messageId":"231","endLine":3,"endColumn":14},{"ruleId":"272","severity":1,"message":"273","line":132,"column":5,"nodeType":"255","messageId":"240","endLine":144,"endColumn":6},{"ruleId":"237","severity":1,"message":"241","line":153,"column":24,"nodeType":"239","messageId":"240","endLine":153,"endColumn":26},{"ruleId":"237","severity":1,"message":"241","line":155,"column":31,"nodeType":"239","messageId":"240","endLine":155,"endColumn":33},{"ruleId":"274","severity":1,"message":"275","line":78,"column":65,"nodeType":"276","messageId":"277","endLine":78,"endColumn":67},{"ruleId":"237","severity":1,"message":"241","line":79,"column":45,"nodeType":"239","messageId":"240","endLine":79,"endColumn":47},{"ruleId":"237","severity":1,"message":"238","line":79,"column":59,"nodeType":"239","messageId":"240","endLine":79,"endColumn":61},{"ruleId":"237","severity":1,"message":"238","line":84,"column":39,"nodeType":"239","messageId":"240","endLine":84,"endColumn":41},{"ruleId":"237","severity":1,"message":"241","line":86,"column":70,"nodeType":"239","messageId":"240","endLine":86,"endColumn":72},{"ruleId":"228","severity":1,"message":"278","line":3,"column":67,"nodeType":"230","messageId":"231","endLine":3,"endColumn":76},{"ruleId":"237","severity":1,"message":"241","line":142,"column":41,"nodeType":"239","messageId":"240","endLine":142,"endColumn":43},{"ruleId":"237","severity":1,"message":"238","line":189,"column":26,"nodeType":"239","messageId":"240","endLine":189,"endColumn":28},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["279"],"no-negated-in-lhs",["280"],"'Cookies' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.",["279"],["280"],"'useHistory' is defined but never used.","'useLocation' is defined but never used.","'Router' is defined but never used.","'Item' is defined but never used.","'Feed' is defined but never used.","'GridColumn' is defined but never used.","'StyledContentLoader' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'withRouter' is defined but never used.","'Image' is defined but never used.","'Label' is defined but never used.","'Redirect' is defined but never used.","'user' is assigned a value but never used.","'Fragment' is defined but never used.","'Menu' is defined but never used.","'Header' is defined but never used.","'Sidebar' is defined but never used.","'Segment' is defined but never used.","'Container' is defined but never used.",["279"],["280"],"'Icon' is defined but never used.","'matchPath' is defined but never used.","no-dupe-class-members","Duplicate name 'renderAction'.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'TableCell' is defined but never used.","no-global-assign","no-unsafe-negation"]